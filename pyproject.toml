[tool.poetry]
name = "giggityflix-peer"
version = "0.1.0"
description = "Peer service for Giggityflix media streaming platform"
readme = "README.md"
packages = [{ include = "giggityflix_peer", from = "src" }]

[tool.poetry.dependencies]
python = "^3.11"
django = "^4.2.0"
djangorestframework = "^3.14.0"
giggityflix-grpc-peer = { path = "../giggityflix-grpc-peer", develop = true }
grpcio = "^1.71.0"
aiohttp = "^3.9.1"
aiosqlite = "^0.19.0"
pydantic = "^2.11.4"
aiortc = "^1.5.0"
watchdog = "^3.0.0"
colorlog = "^6.7.0"
opencv-python = "^4.11.0.86"
typer = { extras = ["all"], version = "^0.9.0" }

[tool.poetry.group.dev.dependencies]
pytest = "^8.1.1"
pytest-asyncio = "^0.23.5.post1"
pytest-mock = "^3.14.0"
pytest-cov = "^4.1.0"
black = "^24.3.0"
flake8 = "^7.0.0"
mypy = "^1.8.0"
isort = "^5.13.2"
pre-commit = "^3.6.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ["py311"]

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.11"
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
strict_optional = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_ignores = true
